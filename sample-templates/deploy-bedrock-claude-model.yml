# This template creates a connector to the BedRock service for Claude model
# It then registers a model using that connector and deploys it.
#
# To use:
#  - update the "credential" fields under the create_claude_connector node.
#  - if needed, update region
#
# After provisioning:
#  - returns a workflow ID
#  - use the status API to get the deployed model ID
---
name: Deploy Claude Model
description: Deploy a model using a connector to Claude
use_case: PROVISION
version:
  template: 1.0.0
  compatibility:
  - 2.12.0
  - 3.0.0
# This section defines the provision workflow. Nodes are connected in a graph.
# Either previous_node_inputs or explicit edges can be used to enforce ordering.
workflows:
  provision:
    # Each id field in a workflow must be unique.
    nodes:
    - id: create_claude_connector
      type: create_connector
      user_inputs:
        name: Claude Instant Runtime Connector
        version: '1'
        protocol: aws_sigv4
        description: The connector to BedRock service for Claude model
        actions:
        - headers:
            x-amz-content-sha256: required
            content-type: application/json
          method: POST
          request_body: '{
              "prompt":"${parameters.prompt}",
              "max_tokens_to_sample":${parameters.max_tokens_to_sample},
              "temperature":${parameters.temperature},  "anthropic_version":"${parameters.anthropic_version}"
            }'
          action_type: predict
          url: https://bedrock-runtime.us-west-2.amazonaws.com/model/anthropic.claude-instant-v1/invoke
        credential:
          access_key: 'PUT_YOUR_ACCESS_KEY_HERE'
          secret_key: 'PUT_YOUR_SECRET_KEY_HERE'
        parameters:
          endpoint: bedrock-runtime.us-west-2.amazonaws.com
          content_type: application/json
          auth: Sig_V4
          max_tokens_to_sample: '8000'
          service_name: bedrock
          temperature: '0.0001'
          response_filter: "$.completion"
          region: us-west-2
          anthropic_version: bedrock-2023-05-31
    - id: register_claude_model
      type: register_remote_model
      previous_node_inputs:
        create_claude_connector: connector_id
      user_inputs:
        name: claude-instant
        # Using deploy: true here would both registers and deploy the model
        # and the deploy model step below could be deleted
        # deploy: true
    - id: deploy_claude_model
      type: deploy_model
      previous_node_inputs:
        register_claude_model: model_id
    # Because the above nodes use previous_node_inputs, these edges are automatically generated.
    # edges:
    # - source: create_claude_connector
    #   dest: register_claude_model
    # - source: register_claude_model
    #   dest: deploy_claude_model
